{"ast":null,"code":"var _jsxFileName = \"/Users/chenhongzhi/test/firebase_loginPage/src/components/PasswordForget/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"PasswordForget\"), React.createElement(PasswordForgetForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email\n      } = this.state;\n      this.props.firebase.doPassWordReset(email).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      error\n    } = this.state;\n    const isInvalid = email === '';\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst PasswordForgetLink = () => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: ROUTES.PASSWORD_FORGET,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Forgot Password?\"));\n\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","map":{"version":3,"sources":["/Users/chenhongzhi/test/firebase_loginPage/src/components/PasswordForget/index.js"],"names":["React","Component","Link","withFirebase","ROUTES","PasswordForgetPage","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","doPassWordReset","then","setState","catch","preventDefault","onChange","target","name","value","console","log","render","isInvalid","message","PasswordForgetLink","PASSWORD_FORGET","PasswordForgetForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,kBAAkB,GAAG,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,CADD;;AAOA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAtB;;AAKA,MAAMC,sBAAN,SAAqCR,SAArC,CAA+C;AAC9CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAMnBC,QANmB,GAMRC,KAAK,IAAI;AACnB,YAAM;AAAEN,QAAAA;AAAF,UAAY,KAAKO,KAAvB;AAEA,WAAKH,KAAL,CAAWI,QAAX,CACEC,eADF,CACkBT,KADlB,EAEEU,IAFF,CAEO,MAAM;AACX,aAAKC,QAAL,CAAc,EAAE,GAAGZ;AAAL,SAAd;AACG,OAJL,EAKEa,KALF,CAKQX,KAAK,IAAI;AACf,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACA,OAPF;AAQAK,MAAAA,KAAK,CAACO,cAAN;AACA,KAlBkB;;AAAA,SAoBnBC,QApBmB,GAoBRR,KAAK,IAAI;AACnB,WAAKK,QAAL,CAAc;AAAE,SAACL,KAAK,CAACS,MAAN,CAAaC,IAAd,GAAqBV,KAAK,CAACS,MAAN,CAAaE;AAApC,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,KAvBkB;;AAGlB,SAAKA,KAAL,GAAa,EAAE,GAAGR;AAAL,KAAb;AACA;;AAqBDqB,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEpB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKM,KAA9B;AAEA,UAAMc,SAAS,GAAGrB,KAAK,KAAK,EAA5B;AAEA,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKK,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,KAFnB;AAGC,MAAA,QAAQ,EAAE,KAAKc,QAHhB;AAIC,MAAA,IAAI,EAAC,MAJN;AAKC,MAAA,WAAW,EAAC,eALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAQC;AAAQ,MAAA,QAAQ,EAAEO,SAAlB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARD,EAYEpB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACqB,OAAV,CAZX,CADD;AAgBA;;AA/C6C;;AAkD/C,MAAMC,kBAAkB,GAAG,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAE1B,MAAM,CAAC2B,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CADD;;AAMA,eAAe1B,kBAAf;AAEA,MAAM2B,kBAAkB,GAAG7B,YAAY,CAACM,sBAAD,CAAvC;AAEA,SAASuB,kBAAT,EAA6BF,kBAA7B","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { withFirebase } from '../Firebase'\nimport * as ROUTES from '../../constants/routes'\n\nconst PasswordForgetPage = () => (\n\t<div>\n\t\t<h1>PasswordForget</h1>\n\t\t<PasswordForgetForm />\n\t</div>\n)\n\nconst INITIAL_STATE = {\n\temail: '',\n\terror: null,\n}\n\nclass PasswordForgetFormBase extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { ...INITIAL_STATE }\n\t}\n\t\n\tonSubmit = event => {\n\t\tconst { email } = this.state\n\n\t\tthis.props.firebase\n\t\t\t.doPassWordReset(email)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({ ...INITIAL_STATE })\n      })\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ error })\t\n\t\t\t})\n\t\tevent.preventDefault()\n\t}\n\n\tonChange = event => {\n\t\tthis.setState({ [event.target.name]: event.target.value })\n\t\tconsole.log(this.state)\n\t}\n\n\trender() {\n\t\tconst { email, error } = this.state\n\n\t\tconst isInvalid = email === ''\n\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Email Address'\n\t\t\t\t/>\t\n\t\t\t\t<button disabled={isInvalid} type='submit'>\n\t\t\t\t\tReset My Password\n\t\t\t\t</button>\n\t\t\t\n\t\t\t\t{error && <p>{error.message}</p>}\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nconst PasswordForgetLink = () => (\n\t<p>\n\t\t<Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n\t</p>\n)\n\nexport default PasswordForgetPage\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase)\n\nexport { PasswordForgetForm, PasswordForgetLink }\n"]},"metadata":{},"sourceType":"module"}