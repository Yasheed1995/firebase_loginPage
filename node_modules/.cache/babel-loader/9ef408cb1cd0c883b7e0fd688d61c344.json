{"ast":null,"code":"var _jsxFileName = \"/Users/chenhongzhi/test/react-firebase-authentication/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"SignIn\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n        console.log(error);\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    const isInValid = password === '' || email === '';\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInValid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/Users/chenhongzhi/test/react-firebase-authentication/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","withFirebase","ROUTES","SignInPage","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","console","log","preventDefault","onChange","target","name","value","render","isInValid","message","SignInForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\n\nimport { SignUpLink } from '../SignUp'\nimport { withFirebase } from '../Firebase'\nimport * as ROUTES from '../../constants/routes'\n\nconst SignInPage = () => (\n\t<div>\n\t\t<h1>SignIn</h1>\n\t\t<SignInForm />\n\t\t<SignUpLink />\n\t</div>\n)\n\nconst INITIAL_STATE = {\n\temail: '',\n\tpassword: '',\n\terror: null,\n}\n\nclass SignInFormBase extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state = { ...INITIAL_STATE }\t\n\t}\n\n\tonSubmit = event => {\n\t\tconst { email, password } = this.state\n\t\t\n\t\tthis.props.firebase\n\t\t\t.doSignInWithEmailAndPassword(email, password)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({ ...INITIAL_STATE })\n\t\t\t\tthis.props.history.push(ROUTES.HOME)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ error })\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\tevent.preventDefault()\t\n\t}\n\t\t\n\tonChange = event => {\n\t\tthis.setState({ [event.target.name]: event.target.value })\n\t\tconsole.log(this.state)\n\t}\n\n\trender() {\n\t\tconst { email, password, error } = this.state\n\n\t\tconst isInValid = password === '' || email === ''\n\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Email Address'\t\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='Password'\t\n\t\t\t\t/>\n  \n\t\t\t\t<button disabled={isInValid} type='submit'>\n\t\t\t\t\tSign In\n\t\t\t\t</button>\n  \n\t\t\t\t{error && <p>{error.message}</p>}\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nconst SignInForm = compose(\n\twithRouter,\n\twithFirebase,\n)(SignInFormBase)\n\nexport default SignInPage\n\nexport { SignInForm }\n\n"]},"metadata":{},"sourceType":"module"}